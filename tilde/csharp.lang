format = 1
%define {

	comment-line {
		%highlight {
			start = "//"
			end = "$"
			style = "comment"
		}
	}

	comment-block {
		%highlight {
			start = "/\*"
			end = "\*/"
			style = "comment"
		}
	}

	reserved-identifier {
		%highlight {
			regex = "\b(?:abstract|as|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|do|double|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|goto|if|implicit|in|int|interface|internal|is|lock|long|namespace|new|null|object|operator|out|override|params|private|protected|public|readonly|ref|return|sbyte|sealed|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|virtual|void|volatile|while)\b"
			style = "keyword"
		}
	}

	contextual-keyword {
		%highlight {
			regex = "\b(?:add|alias|ascending|async|await|by|descending|dynamic|equals|from|get|global|group|into|join|let|nameof|on|orderby|partial|remove|select|set|value|var|when|where|yield)\b"
			style = "keyword"
		}
	}

	interpolated-string-literal {
		%highlight {
			start = '(\$")|(\@\$")|(\$\@")'
			%highlight { use = "string-interpolation" }
			end = '"'
			style = "string"
		}
	}

	attribute {
		%highlight {
			start = "\[\w"
			%highlight { use = "attribute-constructor" }
			end = "\]"
			style = "misc"
		}
	}

	string-literal {
		%highlight {
			start = '"|(\@")'
			end = '"'
			style = "string"
		}
	}

	character-literal {
		%highlight {
			start = "\'"
			end = "\'"
			style = "string"
		}
	}

	preprocessor-directive {
		%highlight {
			start = '#'
			end = '$'
			style = "misc"
		}
	}

	string-interpolation {
		%highlight {
			start = "\{"
			%highlight { use = "csharp" }
			end = "\}"
			style = "normal"
		}
	}

	attribute-constructor {
		%highlight {
			start = "\("
			%highlight { use = "csharp" }
			end = "\)"
			style = "normal"
		}
	}

	csharp {
		%highlight { use = "comment-line" }
		%highlight { use = "comment-block" }
		%highlight { use = "reserved-identifier" }
		%highlight { use = "contextual-keyword" }
		%highlight { use = "interpolated-string-literal" }
		%highlight { use = "string-literal" }
		%highlight { use = "character-literal" }
		%highlight { use = "character-literal" }
		%highlight { use = "preprocessor-directive" }
		%highlight { use = "attribute" }
	}

}

%highlight { use = "csharp" }